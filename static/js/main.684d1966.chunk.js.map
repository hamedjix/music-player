{"version":3,"sources":["components/Song.jsx","components/Player.jsx","components/LibrarySong.jsx","components/Library.jsx","components/Nav.jsx","data.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","Player","isPlaying","setCurrentSong","playSongHandler","audioRef","setSongInfo","songInfo","songs","setSongs","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","song","id","length","current","play","useEffect","newSongs","map","active","min","max","duration","value","type","onChange","e","currentTime","target","onClick","size","icon","faAngleLeft","faPause","faPlay","faAngleRight","LibrarySong","setIsPlaying","selectSongHandler","Library","libraryStatus","Nav","setLibraryStatus","chillHop","uuidv4","audio","color","App","useState","data","useRef","timeUpdateHandler","autoSkip","pause","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.684d1966.chunk.js","sourcesContent":["const Song = ({ currentSong }) => {\r\n  return (\r\n    <div className='song-container'>\r\n      <img src={currentSong.cover} alt='Cover' />\r\n      <h2>{currentSong.name}</h2>\r\n      <h4>{currentSong.artist}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import { useEffect } from 'react';\r\n//FontAwsome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPlay,\r\n  faPause,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n//Component Start\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setCurrentSong,\r\n  playSongHandler,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  //Time Format Function\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  //onChange Handler\r\n  const onChangeHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({\r\n      ...songInfo,\r\n      current: e.target.value,\r\n    });\r\n  };\r\n\r\n  //Skip Track Handler\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === 'skip-forward') {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      if (isPlaying) audioRef.current.play();\r\n    }\r\n    if (direction === 'skip-previous') {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      if (isPlaying) audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  return (\r\n    <div className='player'>\r\n      <div className='time-control'>\r\n        <p>{getTime(songInfo.current)}</p>\r\n        <input\r\n          min={0}\r\n          max={songInfo.duration || 0}\r\n          value={songInfo.current}\r\n          type='range'\r\n          onChange={onChangeHandler}\r\n        />\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\r\n      </div>\r\n      <div className='play-control'>\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler('skip-previous')}\r\n          className='skipPrevious'\r\n          size='2x'\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className='play'\r\n          size='2x'\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler('skip-forward')}\r\n          className='skipForward'\r\n          size='2x'\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","const LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  id,\r\n  setSongs,\r\n}) => {\r\n  const selectSongHandler = async () => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    await setCurrentSong(song);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  return (\r\n    <div\r\n      onClick={selectSongHandler}\r\n      className={`library-song ${song.active ? 'selected' : ''}`}\r\n    >\r\n      <img src={song.cover} alt='Cover' />\r\n      <div>\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'library-active' : ''}`}>\r\n      <h2>Library</h2>\r\n      <div className='library-songs'>\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            key={song.id}\r\n            id={song.id}\r\n            song={song}\r\n            songs={songs}\r\n            setCurrentSong={setCurrentSong}\r\n            isPlaying={isPlaying}\r\n            setIsPlaying={setIsPlaying}\r\n            audioRef={audioRef}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","const Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <div className='nav'>\r\n      <h1>JIX's Music PLayer</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>Library</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      id: uuidv4(),\r\n      name: 'Roses n Flames',\r\n      artist: 'C Y G N',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2021/02/d12927eedcc2f5afba2ab049a4a1ea46c2266ae3-1024x1024.jpg',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=14984',\r\n      color: ['#46305E', '#484975'],\r\n      active: true,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: 'Lonely Waves',\r\n      artist: 'C Y G N',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2021/02/d12927eedcc2f5afba2ab049a4a1ea46c2266ae3-1024x1024.jpg',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=14980',\r\n      color: ['#46305E', '#484975'],\r\n      active: false,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: 'Murmuration',\r\n      artist: 'Blue Wednesday, Shopan',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2020/07/bb0db71fd74f15627e9912ad2278c13cee72ac2d-1024x1024.jpg',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=1226',\r\n      color: ['#018985', '#39343E'],\r\n      active: false,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: 'Sunlit',\r\n      artist: 'Blue Wednesday, Shopan',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2020/07/bb0db71fd74f15627e9912ad2278c13cee72ac2d-1024x1024.jpg',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=1241',\r\n      color: ['#018985', '#39343E'],\r\n      active: false,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: 'Home Court',\r\n      artist: 'Saib',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2021/02/08cbb0848f669e1bd8b5a5152c4b7d20edf1b499-1024x1024.jpg',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=11232',\r\n      color: ['#4D2322', '#FCBB7A'],\r\n      active: false,\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: 'Beyond Clouds',\r\n      artist: 'Saib',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2021/02/08cbb0848f669e1bd8b5a5152c4b7d20edf1b499-1024x1024.jpg',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=6770',\r\n      color: ['#4D2322', '#FCBB7A'],\r\n      active: false,\r\n    },\r\n  ];\r\n}\r\nexport default chillHop;\r\n","import React, { useState, useRef } from 'react';\r\n//import styles\r\nimport './style/App.scss';\r\n//Importing Components\r\nimport Song from './components/Song';\r\nimport Player from './components/Player';\r\nimport Library from './components/Library';\r\nimport Nav from './components/Nav';\r\n//import data\r\nimport data from './data';\r\n\r\nfunction App() {\r\n  //State\r\n  const [songs, setSongs] = useState(data());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({\r\n    current: 0,\r\n    duration: 0,\r\n  });\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n\r\n  //Ref\r\n  const audioRef = useRef(null);\r\n  // onTimeUpdate Handler\r\n  const timeUpdateHandler = (e) => {\r\n    setSongInfo({\r\n      ...songInfo,\r\n      current: e.target.currentTime,\r\n      duration: e.target.duration,\r\n    });\r\n  };\r\n  //onClick Handler\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  // Auto Skip after song ends\r\n  const autoSkip = async () => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  return (\r\n    <div className='App'>\r\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\r\n      <Song currentSong={currentSong} />\r\n      <Player\r\n        isPlaying={isPlaying}\r\n        setIsPlaying={setIsPlaying}\r\n        currentSong={currentSong}\r\n        setCurrentSong={setCurrentSong}\r\n        playSongHandler={playSongHandler}\r\n        audioRef={audioRef}\r\n        songInfo={songInfo}\r\n        setSongInfo={setSongInfo}\r\n        songs={songs}\r\n        setSongs={setSongs}\r\n      />\r\n      <Library\r\n        songs={songs}\r\n        setCurrentSong={setCurrentSong}\r\n        isPlaying={isPlaying}\r\n        setIsPlaying={setIsPlaying}\r\n        audioRef={audioRef}\r\n        setSongs={setSongs}\r\n        libraryStatus={libraryStatus}\r\n      />\r\n      <audio\r\n        onTimeUpdate={timeUpdateHandler}\r\n        onLoadedMetadata={timeUpdateHandler}\r\n        ref={audioRef}\r\n        src={currentSong.audio}\r\n        onEnded={autoSkip}\r\n      ></audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}